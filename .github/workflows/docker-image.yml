name: Docker Image CI

on:
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-1
  TAG_NAME: latest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build the Docker image
      run: docker build -t tanki500/docker-react -f Dockerfile.dev .

    - name: Run tests
      run: docker run -e CI=true tanki500/docker-react npm run test
      id: test_run
      shell: bash

    - name: Check test results
      if: steps.test_run.outputs.exit-status == 0
      run: echo "Tests passed, proceeding with deployment"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
      if: steps.test_run.outputs.exit-status == 0

    - name: Login to AWS ECR
      uses: aws-actions/amazon-ecr-login@v1
      if: steps.test_run.outputs.exit-status == 0

    - name: Build Docker image
      run: |
        docker build -t tanki500/docker-react .
        docker tag tanki500/docker-react:latest ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/docker-stuff:${{ env.TAG_NAME }}

    - name: Push Docker image to AWS ECR
      run: |
        docker push ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/docker-stuff:${{ env.TAG_NAME }}
      if: steps.test_run.outputs.exit-status == 0

    - name: Generate Deployment Package
      run: zip -r deploy.zip * -x "**node_modules**"

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v16
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: docker-react
        environment_name: Dockerreact-env
        region: ${{env.AWS_REGION}}
        deployment_package: deploy.zip

    # - name: Deploy to Elastic Beanstalk
    #   run: |
    #     aws elasticbeanstalk create-application-version \
    #     --application-name docker-react \
    #     --version-label ${{ env.TAG_NAME }} \
    #     --source-bundle S3Bucket=elasticbeanstalk-us-east-1-547920023671,S3Key=.elasticbeanstalk

    #     aws elasticbeanstalk update-environment \
    #     --environment-name Dockerreact-env \
    #     --version-label ${{ env.TAG_NAME }}
    #   if: steps.test_run.outputs.exit-status == 0